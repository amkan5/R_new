#  1117605 4064286
highWage <- which.wage==4064286;
#  1117605 4064286
highWage <- which(wage==4064286);
# index값
var.salary[highwage,]
# index값
var.salary[highWage,]
# 4분위 구하기  (전체를 4등분) 내가 할려고 하는 데이터값이 어디부위에 속하냐
qnt = quantile(wage,na.rm=T)
# 4분위 구하기  (전체를 4등분) 내가 할려고 하는 데이터값이 어디부위에 속하냐
qnt = quantile(wage,na.rm=T) #set
qnt #get
wagePerGrader <- tapply(wage, gender, mean, na.rm =T)
wagePerGender
wagePerGrader <- tapply(wage, gender, mean, na.rm =T)
wagePerGender
wage.list
wagePerGrader <- tapply(wage, gender, mean, na.rm=T)
wagePerGender
wagePerGrader
ggplot2::ggplot(
t,
aes(x=varl,y=value,fill=var1)
)+geom_bar(
stat = "identity"
)
x <- reshape2::melt(wagePerGrader)
ggplot2::ggplot(
t,
aes(x=varl,y=value,fill=var1)
)+geom_bar(
stat = "identity"
)
wagePerCarrer
wagePerCarrer <- tapply(wage, carrer, mean, na.rm=T) #table apply
wagePerCareer <- tapply(wage, career, mean, na.rm=T) #table apply
wagePerCareer
wagePerCareer <- tapply(wage, career, mean, na.rm=T) #table apply
## -------------------------------------------------------------------------------
# k__haching__rl
# [6] 평균월급 구하기
# http://www.data.go.kr
## -------------------------------------------------------------------------------
# step 1
var.csv <- "https://www.dropbox.com/s/9gchq4nbt67lpxu/example_salary.csv?dl=1"
var.salary <- read.csv( #r은 var가 의미없음. 그냥 의미있어보이게 하려고 준거
var.csv,
stringsAsFactors = T, # 성별 나이
na = "-" #na는 not avaliable
)
head(var.salary)
colnames(var.salary) <- c(
"age","wage","special","workingTime","workerCount","Career","gender"
)
colnames(var.salary)
# step3 검색대상을 data.frame 으로 전환하기
attach(var.salary) #인스턴스변수처럼됨 전역이됨.
# step4 전체 임금 평균 구하기 (Y축의 높이를 결정)
wage.range <- range(wage,na.rm =T)
wage.range #최소외 최대
#  1117605 4064286
highWage <- which(wage==4064286);
# index값
var.salary[highWage,]
# 4분위 구하기  (전체를 4등분) 내가 할려고 하는 데이터값이 어디부위에 속하냐
qnt = quantile(wage,na.rm=T) #set
qnt #get
# step5 리스트에 담기
wage.list <- list(
평균월급 = mean(wage,na.rm = T),
월급중앙값 = median(wage, na.rm = T),
월급범위 = range(WAGE, na.rm = T),
월급사분위 = quantile(e.wage, na.rm = T)
)
# step5 리스트에 담기
wage.list <- list(
평균월급 = mean(wage,na.rm = T),
월급중앙값 = median(wage, na.rm = T),
월급범위 = range(wage, na.rm = T),
월급사분위 = quantile(e.wage, na.rm = T)
)
# step5 리스트에 담기
wage.list <- list(
평균월급 = mean(wage,na.rm = T),
월급중앙값 = median(wage, na.rm = T),
월급범위 = range(wage, na.rm = T),
월급사분위 = quantile(wage, na.rm = T)
)
wage.list
wagePerGrader <- tapply(wage, gender, mean, na.rm=T) #table apply
wagePerGrader
#     남      여  차트를 분해해야해 남여 따로주려면
# 2477332 1865823
x <- reshape2::melt(wagePerGrader)
ggplot2::ggplot(
t,
aes(x=varl,y=value,fill=var1)
)+geom_bar(
stat = "identity"
)
#     남      여  차트를 분해해야해 남여 따로주려면
# 2477332 1865823
x <- reshape2::melt(wagePerGrader)
x <- reshape2::melt(wagePerGrader)
ggplot2::ggplot(
t,
aes(x=varl,y=value,fill=var1)
)+geom_bar(
stat = "identity"
)
wagePerGrader
wage.list
wagePerGrader
wage.list
x <- reshape2::melt(wagePerGrader)
ggplot2::ggplot(
t,
aes(x=varl,y=value,fill=var1)
)+geom_bar(
stat = "identity"
)
t <- reshape2::melt(wagePerGrader)
t <- reshape2::melt(wagePerGrader)
wagePerGrader <- tapply(wage, gender, mean, na.rm=T) #table apply
wagePerGrader
t <- reshape2::melt(wagePerGrader)
ggplot2::ggplot(
t,
aes(x=varl,y=value,fill=var1)
)+geom_bar(
stat = "identity"
)
ggplot2::ggplot(
t,
aes(x=var1,y=value,fill=var1)
)+geom_bar(
stat = "identity"
)
wagePerGrader
wagePerGrader
t <- reshape2::melt(wagePerGrader)
t
ggplot2::ggplot(
t,
aes(x=Var1,y=value,fill=var1)
)+geom_bar(
stat = "identity"
)
ggplot2::ggplot(
t,
aes(x=Var1,y=value,fill=Var1)
)+geom_bar(
stat = "identity"
)
wagePerCareer <- tapply(wage, career, mean, na.rm=T) #table apply
wagePerCareer <- tapply(wage, Career, mean, na.rm=T) #table apply
wagePerCareer
t <- reshape2::melt(wagePerCareer)
ggplot2::ggplot(
t,
aes(x=Var1,y=value,group=1)
)+geom_line(color = 'blue',size=2,coord_polar(
ylim(0,max(t.value))
))
t
ggplot2::ggplot(
t,
aes(x=Var1,y=value,group=1)
)+geom_line(color = 'blue',size=2,coord_polar(
ylim(0,max(t.value))
))
ggplot2::ggplot(
t,
aes(
x = Var1,
y = value,
group = 1
)
)+geom_line(
color = 'blue',
size = 2
)+coord_polar()+
ylim(0,max(t$value))
if("ggmap" %in% installed.packages("ggmap") == FALSE)install.packages("ggmap")
library(ggmap)
if("googleVis" %in% installed.packages("googleVis") == FALSE)install.packages("googleVis")
library(googleVis)
library(googleVis)
library(ggmap)
g <- geocode(enc2utf8(addr))
g
shop <- c("1.역삼더블루점","2.역삼상록점","3.역삼역점")
addr <- c("서울특별시 강남구 논현로63길 16",
"서울특별시 강남구 테헤란로43길 18",
"서울특별시 강남구 테헤란로25길 17")
g <- geocode(enc2utf8(addr))
g
t <- data.frame(name=shop, lon=g$lon,lat=g$lat)
t
shop <- c("1.역삼더블루점","2.역삼상록점","3.역삼역점")
addr <- c("서울특별시 강남구 논현로63길 16",
"서울특별시 강남구 테헤란로43길 18",
"서울특별시 강남구 테헤란로25길 17")
g <- geocode(enc2utf8(addr))
g <- geocode(enc2utf8(addr))
g
t <- data.frame(name=shop, lon=g$lon,lat=g$lat)
t
shop <- c("1.역삼더블루점","2.역삼상록점","3.역삼역점")
addr <- c("서울특별시 강남구 논현로63길 16",
"서울특별시 강남구 테헤란로43길 18",
"서울특별시 강남구 테헤란로25길 17")
g <- geocode(enc2utf8(addr))
g
addr <- c("서울특별시 강남구 삼성2동 테헤란로63길 16",
"서울특별시 강남구 테헤란로43길 18",
"서울특별시 강남구 테헤란로25길 17")
g <- geocode(enc2utf8(addr))
g
addr <- c("서울특별시 강남구 삼성2동 테헤란로63길 16",
"서울특별시 강남구 역삼1동 테헤란로43길 18",
"서울특별시 강남구 역삼1동 테헤란로25길 17")
g <- geocode(enc2utf8(addr))
g
addr <- c("서울특별시 강남구 삼성2동 테헤란로63길 16",
"서울특별시 강남구 역삼1동 테헤란로43길 18",
"서울특별시 강남구 역삼1동 테헤란로25길 17")
g <- geocode(enc2utf8(addr))
g
t <- data.frame(name=shop, lon=g$lon,lat=g$lat)
t
addr <- c("서울특별시 강남구 삼성2동 테헤란로63길 16",
"서울특별시 강남구 역삼1동 테헤란로43길 18",
"서울특별시 강남구 역삼1동 테헤란로25길 17")
g <- geocode(enc2utf8(addr))
g
t <- data.frame(name=shop, lon=g$lon,lat=g$lat)
t
addr <- c("서울특별시 강남구 삼성2동 테헤란로63길 16",
"서울특별시 강남구 역삼1동 테헤란로43길 18",
"서울특별시 강남구 역삼1동 테헤란로25길 17")
g <- geocode(enc2utf8(addr))
g
shop <- c("1.역삼더블루점","2.역삼상록점","3.역삼역점")
addr <- c("서울특별시 강남구 삼성2동 테헤란로63길 16",
"서울특별시 강남구 역삼1동 테헤란로43길 18",
"서울특별시 강남구 역삼1동 테헤란로25길 17")
g <- geocode(enc2utf8(addr))
g
addr <- c("서울특별시 강남구 삼성2동 테헤란로63길 16",
"서울특별시 강남구 역삼1동 테헤란로43길 18",
"서울특별시 강남구 역삼1동 테헤란로25길 17")
g <- geocode(enc2utf8(addr))
g
addr <- c("서울특별시 강남구 삼성2동 테헤란로63길 16",
"서울특별시 강남구 역삼1동 테헤란로43길 18",
"서울특별시 강남구 역삼1동 테헤란로25길 17")
addr <- c("서울특별시 강남구 삼성2동 테헤란로63길 16")
g <- geocode(enc2utf8(addr))
g
source('~/Ediya.R', encoding = 'UTF-8')
c <- c(mean(t$lon),mean(t$lat))
addr <- c("서울특별시 강남구 삼성2동 테헤란로63길 16",
"서울특별시 강남구 역삼1동 테헤란로43길 18",
"서울특별시 강남구 역삼1동 테헤란로25길 17")
g <- geocode(enc2utf8(addr))
g
addr <- c("서울특별시 강남구 삼성2동 테헤란로63길 16 ",
"서울특별시 강남구 역삼1동 테헤란로43길 18 ",
"서울특별시 강남구 역삼1동 테헤란로25길 17 ")
g <- geocode(enc2utf8(addr))
g
g <- geocode(enc2utf8(addr), output = "latlona", source = "dsk")
g
t <- data.frame(name=shop, lon=g$lon,lat=g$lat)
t
c <- c(mean(t$lon),mean(t$lat))
c
map <- get_googlemap(
center = c,
maptype = "roadmap",
zoom = 15,
markers = 0
)
map <- get_googlemap(
center = c,
maptype = "roadmap",
zoom = 15,
markers = 0
)
map <- get_googlemap(
center = c,
maptype = "roadmap",
zoom = 15,
markers = 0
)
map <- get_googlemap(
center = c,
maptype = "roadMap",
zoom = 15,
markers = 0
)
c
map <- get_googlemap(
center = c,
maptype = "roadmap",
zoom = 15,
markers = 0
)
c <- c(mean(t$lon),mean(t$lat))
c
map <- get_googlemap(c,
center = c,
maptype = "roadmap",
zoom = 15,
markers = 0
)
map <- get_googlemap(
center = c,
maptype = "roadmap",
zoom = 15,
markers = 0,
language = "ko-KR"
)
c <- as.numeric(c(mean(t$lon),mean(t$lat)))
c
map <- get_googlemap(
center = c,
maptype = "roadmap",
zoom = 15,
markers = 0,
language = "ko-KR"
)
gc <- geocode("seoul, korea", source="google")
gc
centre <- c(gc)
centre
gc <- geocode("seoul, korea", source="google")
gc
centre <- as.numeric(gc)
centre
c <- c(mean(t$lon),mean(t$lat))
c
source('~/Ediya.R', encoding = 'UTF-8', echo=TRUE)
install.packages("ggmap")
install.packages("googleVis")
map <- get_googlemap(
center = c,
language = "ko-KR"
)
c <- c(mean(t$lon),mean(t$lat))
c
map <- get_googlemap(
center = c,
language = "ko-KR"
)
map <- get_googlemap(
center = c,
language = "ko-KR"
color = "bw", scale = 2
)
map <- get_googlemap(
center = c,
language = "ko-KR",
color = "bw", scale = 2
)
library(RGA)
library(RGA)
c <- c(mean(t$lon),mean(t$lat))
c
map <- get_googlemap(
center = c,
maptype = "roadmap",
zoom = 15,
markers = 0,
language = "ko-KR"
)
map<- get_googlemap(
center = c
)
map <- get_googlemap(
center = c,
maptype = "roadmap",
zoom = 15,
markers = 0,
language = "ko-KR"
)
map <- get_googlemap(
center = c,
maptype = "roadmap",
zoom = 15,
language = "ko-KR"
)
map <- get_googlemap(
center = c,
language = "ko-KR"
)
map = get_googlemap(
center = c,
language = "ko-KR"
)
c <- as.numeric(mean(t$lon),mean(t$lat))
c
map <- get_googlemap(
center = c,
language = "ko-KR"
)
library(ggplot2)
map <- get_googlemap(
center = c,
maptype = "roadmap",
zoom = 15,
markers = 0,
language = "ko-KR"
)
get_googlemap(
center=c(lon=mean(t$lon),mean(t$lat))
,zoom=8,
maptype='terrain',color='bw')
get_googlemap(
center=c(lon=mean(t$lon),mean(t$lat))
)
map <- get_googlemap(
center=c(lon=mean(t$lon),mean(t$lat))
)
map <- get_googlemap(
center=c(lon=mean(t$lon),mean(t$lat))
)
c <- c(mean(t$lon),mean(t$lat))
t <- data.frame(name=shop, lon=g$lon,lat=g$lat)
t
map <- get_googlemap(
center=c(lon=mean(t$lon),mean(t$lat))
)
library(ggplot2)
library(ggmap)
map <- get_googlemap(
center = c,
maptype = "roadmap",
zoom = 15,
markers = 0,
language = "ko-KR",
url(http://maps.googleapis.com/maps/api/staticmap?center=27.959375,121.920875&zoom=8&size=640x640&scale=2&maptype=terrain&sensor=false)
)
map <- get_googlemap(
center = c,
maptype = "roadmap",
zoom = 15,
markers = 0,
language = "ko-KR"
url("http://maps.googleapis.com/maps/api/staticmap?center=27.959375,121.920875&zoom=8&size=640x640&scale=2&maptype=terrain&sensor=false")
)
map <- get_googlemap(
center = c,
maptype = "roadmap",
zoom = 15,
markers = 0,
language = "ko-KR",
url("http://maps.googleapis.com/maps/api/staticmap?center=27.959375,121.920875&zoom=8&size=640x640&scale=2&maptype=terrain&sensor=false")
)
map <- get_googlemap(
center = c,
maptype = "roadmap",
zoom = 15,
language = "ko-KR",
url("http://maps.googleapis.com/maps/api/staticmap?center=27.959375,121.920875&zoom=8&size=640x640&scale=2&maptype=terrain&sensor=false")
)
source('~/Ediya.R', encoding = 'UTF-8')
map <- get_googlemap(
center = c,
maptype = "roadmap",
zoom = 15,
language = "ko-KR"
)
map <- get_googlemap(
center = c,
maptype = "roadmap",
zoom = 15,
language = "ko-KR"
)
ggmap(map, extent = 'device')
c <- c(mean(t$lon),mean(t$lat))
c
map <- get_googlemap(
center = c,
maptype = "roadmap",
zoom = 15,
language = "ko-KR"
)
ggmap(map, extent = 'device')
map <- get_googlemap(
center = c,
maptype = "roadmap",
zoom = 15,
language = "ko-KR"
)
ggmap(map, extent = 'device')
g <- geocode(enc2utf8(addr), output = "latlona", source = "dsk")
g
t <- data.frame(name=shop, lon=g$lon,lat=g$lat)
t
c <- c(mean(t$lon),mean(t$lat))
c
map <- get_googlemap(
center = c,
maptype = "roadmap",
zoom = 15,
language = "ko-KR"
)
ggmap(map, extent = 'device')
source('~/Ediya.R', encoding = 'UTF-8')
